@import '../variables';

@mixin decorations($name) {
        position: relative;
        z-index: 1;
    
        &::before {
            content: "";
            position: absolute;
            display: block;
            width: 101vw;
            height: 6rem;
            bottom: calc(100% - 1px);
            left: 0;
            background-position: center bottom;
            background-color: #{$name};
            -webkit-mask-image: var(--before-image);
            mask-image: var(--before-image);
            mask-repeat: no-repeat;
            mask-position: center bottom;
            mask-size: contain;
            -webkit-mask-repeat: no-repeat;
            -webkit-mask-position: center bottom;
            -webkit-mask-size: contain;
    
            @include screen(md) {
                width: 100vw;
                height: 6.2rem;
            }
        }    
    
        &::after {
            content: "";
            position: absolute;
            display: block;
            width: 101vw;
            height: 6rem;
            top: calc(100% - 1px);
            left: 0;
            background-position: center bottom;
            background-color: var(--color-#{$name});
            -webkit-mask-image: var(--after-image);
            mask-image: var(--after-image);
            mask-repeat: no-repeat;
            mask-position: center bottom;
            mask-size: contain;
            -webkit-mask-repeat: no-repeat;
            -webkit-mask-position: center bottom;
            -webkit-mask-size: contain;
        }    
    }

@each $name, $hex in $colors {
    .bg-#{$name} {
        background-color: var(--color-#{$name}); 
    }

    .bg-#{$name}-transparent {
        background-color: var(--color-#{$name})30; 
    }
}

.bg-white {
    background-color: white;
}

.bg-transparent {
    background-color: transparent;
}

.bg-multiply {
    background-blend-mode: multiply;

    & > * {
        background-blend-mode: initial ;
    }
  }

  .bg-overlay {
    background-blend-mode: overlay;

    & > * {
        background-blend-mode: initial ;
    }
  }

  .bg-lighten {
    background-blend-mode: lighten;

    & > * {
        background-blend-mode: initial ;
    }
  }

section {

    @each $name, $hex in $colors {
        &.bg-#{$name} {
            background-color: var(--color-#{$name}); 

            &:not(.bg-transparent) {
                background-color: var(--color-#{$name}); 
                z-index: random(10);
            }

            & + .bg-#{$name}::before {
                display: none;
            }

            &.decorated {
                @include decorations(var(--color-#{$name}));
            }
    
        }

        
    }
    
    &.bg-white {
        background-color: white;
        
        &.decorated {
            @include decorations(white);
        }
    }

    &.bg-picture {

        &:before {
            content: '';
            background-image: none;
            background-color: rgba(255,255,255,0.5);
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
        }
    }

    &.bg-tertiary {
        color: var(--color-primary);
    }
}







  @for $i from 0 through 10 {
    .opacity-#{$i}0 {
        opacity: calc($i/10) ;
    }
  }

  